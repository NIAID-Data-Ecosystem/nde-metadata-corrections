name: Automatic Issue Labeler

on:
  issues:
    types: [opened]

jobs:
  labelIssue:
    runs-on: ubuntu-latest
    steps:
      - name: Label issue based on content
        uses: actions/github-script@v5
        with:
          script: |
            const issueBody = context.payload.issue.body;
            const labelsToAdd = [];
            
            // Add labels based on 'Correction Scope' dropdown selection
            if (issueBody.includes('specific record')) {
              labelsToAdd.push('specific-record-correction');
            } else if (issueBody.includes('some records')) {
              labelsToAdd.push('some-records-correction');
            } else if (issueBody.includes('most or all records')) {
              labelsToAdd.push('general-correction');
            }
            
            // Add labels based on 'Proposed Correction Type'
            if (issueBody.includes('replace value')) {
              labelsToAdd.push('replace-value');
            } else if (issueBody.includes('remove value')) {
              labelsToAdd.push('remove-value');
            } else if (issueBody.includes('append value')) {
              labelsToAdd.push('append-value');
            }
            
            async function addLabels() {
              if (labelsToAdd.length > 0) {
                const issueNumber = context.issue.number;
                const githubToken = process.env.GITHUB_TOKEN;
                const octokit = github.getOctokit(githubToken);
                
                await octokit.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  labels: labelsToAdd,
                });
              }
            }

            addLabels();
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: false
          user-agent: actions/github-script
          result-encoding: json
